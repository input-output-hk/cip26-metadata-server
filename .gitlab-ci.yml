variables:
  # Common variables to be able to build and push docker images
  # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-disabled
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''

  # To make npm test to not to start in watc  h mode
  # https://create-react-app.dev/docs/running-tests/#continuous-integration
  CI: 'true'

cache:
  paths:
    - node_modules/

stages:
  - lint
  - test
  - package

lint:
  image: docker.atixlabs.com/node:16.16.0-alpine
  stage: lint
  script:
    - apt-get -y update
    - apt-get -y install software-properties-common
    - add-apt-repository -y ppa:deadsnakes/ppa
    - apt-get -y update
    - apt-get -y install python3.8  python-pip3
    - npm ci
    - npm run lint
  except:
    - schedules

test:
  image: docker.atixlabs.com/node:16
  variables:
    NODE_ENV: test
  stage: test
  script:
    - apt-get -y update
    - apt-get -y install software-properties-common
    - add-apt-repository -y ppa:deadsnakes/ppa
    - apt-get -y update
    - apt-get -y install python3.8  python-pip3
    - npm ci
    - npm run test:unit
    - npm run test:integration
  except:
    - schedules

package:
  image: docker.atixlabs.com/node:16.16.0-alpine
  services:
    - docker:19.03.1-dind
  stage: package
  variables:
    PORT: $PORT
    HOST: $HOST
    LOGGER_LEVEL: $LOGGER_LEVEL
    DB_PASS: $DB_PASS
    DB_USERNAME: $DB_USERNAME
    DB_CLUSTER: $DB_CLUSTER
    DB_NAME: $DB_NAME
  script:
    - apk add docker git
    - docker login -u gitlabci -p $CI_JOB_TOKEN $CI_REGISTRY
    - npm cache clean --force
    - npm run docker:build
    - npm run docker:push
  only:
    refs:
      # Only run on main
      - main
