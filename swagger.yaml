openapi: 3.0.3
info:
  title: Cardano off-chain metadata - OpenAPI 3.0
  version: 1.0.0
  servers:
    - url: https://localhost:8000/
paths:
  /health:
    get:
      summary: Server healthcheck
      operationId: health-check
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Healthcheck'
        '500':
          description: Server unavailable
  /metadata:
    post:
      summary: Metada object creation
      operationId: metadata-creation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataCreationBody'
        required: true
      responses:
        '201':
          description: Metadata object created
        '500':
          description: Server unavailable
  /metadata/{subject}:
    get:
      summary: Get the full metadata object associated with the provided subject
      operationId: metadata-get-object-by-subject
      parameters:
        - in: path
          name: subject
          schema:
            type: string
          required: true
          description: Subject of the metadata object to get
      responses:
        '200':
          description: Metadata object retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataObjectBySubject'
        '404':
          description: Metadata object not found
  /metadata/{subject}/properties:
    get:
      summary: Get all the property names which are available for the metadata object associated with the provided subject
      operationId: metadata-get-property-names
      parameters:
        - in: path
          name: subject
          schema:
            type: string
          required: true
          description: Subject of the metadata object to get properties from
      responses:
        '200':
          description: Metadata object properties retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataObjectPropertyNames'
        '404':
          description: Metadata object not found
  /metadata/{subject}/property/{propertyName}:
    get:
      summary: Get the property value of the given property name for the metadata object associated with the provided subject
      operationId: metadata-get-property
      parameters:
        - in: path
          name: subject
          schema:
            type: string
          required: true
          description: Subject of the metadata object to get the property from
        - in: path
          name: propertyName
          schema:
            type: string
          required: true
          description: Name of the property to get value from
      responses:
        '200':
          description: Property value retrieved
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/MetadataObjectPropertySubject'
                  - $ref: '#/components/schemas/MetadataObjectPropertyPolicy'
                  - $ref: '#/components/schemas/MetadataObjectPropertyPreimage'
                  - $ref: '#/components/schemas/MetadataObjectPropertyName'
                  - $ref: '#/components/schemas/MetadataObjectPropertyDescription'
                  - $ref: '#/components/schemas/MetadataObjectPropertyTicker'
                  - $ref: '#/components/schemas/MetadataObjectPropertyDecimals'
                  - $ref: '#/components/schemas/MetadataObjectPropertyUrl'
                  - $ref: '#/components/schemas/MetadataObjectPropertyLogo'
                  - $ref: '#/components/schemas/MetadataObjectPropertyEntry'
        '404':
          description: Metadata object or property not found
  /metadata/query:
    post:
      summary: Get a list of metadata objects with their properties narrowed down to only those specified by properties. If no list of properties is provided, a list of full metadata objects is retrieved
      operationId: metadata-query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataQuery'
        required: true
      responses:
        '200':
          description: Query results retrieved
        '500':
          description: Server unavailable
components:
  schemas:
    Healthcheck:
      type: object
      properties:
        up:
          type: boolean
          example: true
    MetadataObjectBySubject:
      type: object
      required: ['subject']
      additionalProperties:
        type: object
        required: ['value', 'sequenceNumber', 'signatures']
        properties:
          value:
            type: object
          sequenceNumber:
            type: number
          signatures:
            type: array
            items:
              type: object
              required: ['publicKey', 'signature']
              properties:
                publicKey:
                  type: string
                  format: base16
                  minLength: 64
                  maxLength: 64
                signature:
                  type: string
                  format: base16
                  minLength: 128
                  maxLength: 128
      properties:
        subject:
          type: string
          minLength: 1
          maxLength: 255
        policy:
          type: string
          format: base16
          minLength: 56
          maxLength: 120
        preimage:
          type: object
          required: ['alg', 'msg']
          properties:
            alg:
              type: string
              enum: ['sha1', 'sha', 'sha3', 'blake2b', 'blake2s', 'keccak', 'md5']
            msg:
              type: string
              contentEncoding: base16
        name:
          type: string
          maxLength: 50
          minLength: 1
        description:
          type: string
          maxLength: 500
        ticker:
          type: string
          maxLength: 9
          minLength: 2
        decimals:
          type: integer
          minimum: 1
          maximum: 19
        url:
          type: string
          format: uri
          maxLength: 250
        logo:
          type: string
          format: base64
          maxLength: 87400
    MetadataObjectPropertyNames:
      type: array
      items:
        type: string
    MetadataObjectPropertySubject:
      type: object
      additionalProperties: false
      required: ['subject']
      properties:
        subject:
          type: string
          minLength: 1
          maxLength: 255
    MetadataObjectPropertyPolicy:
      type: object
      additionalProperties: false
      required: ['policy']
      properties:
        policy:
          type: string
          format: base16
          minLength: 56
          maxLength: 120
    MetadataObjectPropertyPreimage:
      type: object
      additionalProperties: false
      required: ['preimage']
      properties:
        preimage:
          type: object
          required: ['alg', 'msg']
          properties:
            alg:
              type: string
              enum: ['sha1', 'sha', 'sha3', 'blake2b', 'blake2s', 'keccak', 'md5']
            msg:
              type: string
              contentEncoding: base16
    MetadataObjectPropertyName:
      type: object
      additionalProperties: false
      required: ['name']
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
    MetadataObjectPropertyDescription:
      type: object
      additionalProperties: false
      required: ['description']
      properties:
        description:
          type: string
          maxLength: 500
    MetadataObjectPropertyTicker:
      type: object
      additionalProperties: false
      required: ['ticker']
      properties:
        ticker:
          type: string
          maxLength: 9
          minLength: 2
    MetadataObjectPropertyDecimals:
      type: object
      additionalProperties: false
      required: ['decimals']
      properties:
        decimals:
          type: integer
          minimum: 1
          maximum: 19
    MetadataObjectPropertyUrl:
      type: object
      additionalProperties: false
      required: ['url']
      properties:
        url:
          type: string
          format: uri
          maxLength: 250
    MetadataObjectPropertyLogo:
      type: object
      additionalProperties: false
      required: ['logo']
      properties:
        logo:
          type: string
          format: base64
          maxLength: 87400
    MetadataObjectPropertyEntry:
      type: object
      additionalProperties:
        type: object
        required: ['value', 'sequenceNumber', 'signatures']
        properties:
          value:
            type: object
          sequenceNumber:
            type: number
          signatures:
            type: array
            items:
              type: object
              required: ['publicKey', 'signature']
              properties:
                publicKey:
                  type: string
                  format: base16
                  minLength: 64
                  maxLength: 64
                signature:
                  type: string
                  format: base16
                  minLength: 128
                  maxLength: 128
    MetadataQuery:
      type: object
      additionalProperties: false
      required: ['subjects']
      properties:
        subjects:
          type: array
          minItems: 1
          items:
            type: string
        properties:
          type: array
          minItems: 1
          items:
            type: string
    MetadataCreationBody:
      type: object
      required: ['subject']
      additionalProperties:
        type: object
        required: ['value', 'sequenceNumber', 'signatures']
        properties:
          value:
            type: object
          sequenceNumber:
            type: number
          signatures:
            type: array
            items:
              type: object
              required: ['publicKey', 'signature']
              properties:
                publicKey:
                  type: string
                  format: base16
                  minLength: 64
                  maxLength: 64
                signature:
                  type: string
                  format: base16
                  minLength: 128
                  maxLength: 128
      properties:
        subject:
          type: string
          minLength: 1
          maxLength: 255
        policy:
          type: string
          format: base16
          minLength: 56
          maxLength: 120
        preimage:
          type: object
          required: ['alg', 'msg']
          properties:
            alg:
              type: string
              enum: ['sha1', 'sha', 'sha3', 'blake2b', 'blake2s', 'keccak', 'md5']
            msg:
              type: string
              contentEncoding: base16
        name:
          type: string
          maxLength: 50
          minLength: 1
        description:
          type: string
          maxLength: 500
        ticker:
          type: string
          maxLength: 9
          minLength: 2
        decimals:
          type: integer
          minimum: 1
          maximum: 19
        url:
          type: string
          format: uri
          maxLength: 250
        logo:
          type: string
          format: base64
          maxLength: 87400
